# auto-generated by grc.converter

id: sdrplay_source
label: SDRplay Source
category: Sources

parameters:
-   id: type
    label: Output Type
    dtype: enum
    options: [fc32]
    option_labels: [Complex float32]
    option_attributes:
        type: [fc32]
    hide: part
-   id: args
    label: Device Arguments
    dtype: string
-   id: nchan
    label: Num Channels
    dtype: int
    default: '1'
    options: ['1']
-   id: sample_rate
    label: Sample Rate (sps)
    dtype: real
    default: samp_rate
-   id: freq
    label: Frequency (Hz)
    dtype: real
    default: 100e6
-   id: corr
    label: Freq. Corr. (ppm)
    dtype: real
    default: '0'
-   id: dc_offset_mode
    label: DC Offset Mode
    dtype: int
    default: '1'
    options: ['0', '1']
    option_labels: ['Off', Enabled]
-   id: iq_balance_mode
    label: IQ Balance Mode
    dtype: int
    default: '1'
    options: ['0', '1']
    option_labels: ['Off', Enabled]
-   id: gain_mode
    label: Gain Mode
    dtype: bool
    default: 'False'
    options: ['False', 'True']
    option_labels: [Manual, Automatic]
-   id: lna
    label: LNA Atten Step
    dtype: real
    default: '0'
-   id: grdb
    label: IF Atten (dB)
    dtype: real
    default: '40'
-   id: ant
    label: Antenna
    dtype: string
    options: ['', RX, A, B, HIGHZ, T1_50ohm, T2_50ohm]
    option_labels: [Default, RX, A (RSP2/RSP2pro), B (RSP2/RSP2pro), High Z (RSP2/RSP2pro/RSPduo),
        Tuner 1 50 ohm (RSPduo), Tuner 2 50 ohm (RSPduo)]
-   id: bw
    label: Bandwidth (Hz)
    dtype: real
    default: 1536e3
-   id: bias
    label: Bias Voltage
    dtype: int
    default: '0'
    options: ['0', '1']
    option_labels: ['Off', 'On']
-   id: loFreq
    label: AM LO Freq
    dtype: int
    default: '0'
    options: ['0', '120', '144', '168']
    option_labels: [Auto, 120 MHz, 144 MHz, 168 MHz]

outputs:
-   domain: stream
    dtype: ${ type.type }
    multiplicity: '1'

templates:
    imports: import osmosdr
    make: "osmosdr.source(args = ${args} + \",bias=\" + str(${bias}) + \",lo=\" +\
        \ str(${loFreq}))\nself.${id}.set_sample_rate(${sample_rate})\nself.${id}.set_center_freq(${freq},\
        \ 0)\nself.${id}.set_freq_corr(${corr}, 0)\nself.${id}.set_dc_offset_mode(${dc_offset_mode},\
        \ 0)\nself.${id}.set_iq_balance_mode(${iq_balance_mode}, 0)\nself.${id}.set_gain_mode(${gain_mode},\
        \ 0)\nself.${id}.set_gain(${lna}, \"LNA_ATTEN_STEP\", 0)\nself.${id}.set_gain(${grdb},\
        \ \"IF_ATTEN_DB\", 0)\nself.${id}.set_antenna(${ant}, 0)\nself.${id}.set_bandwidth(${bw},\
        \ 0)\n  "
    callbacks:
    - set_sample_rate(${sample_rate})
    - set_center_freq(${freq}, 0)
    - set_freq_corr(${corr}, 0)
    - set_dc_offset_mode(${dc_offset_mode}, 0)
    - set_iq_balance_mode(${iq_balance_mode}, 0)
    - set_gain_mode(${gain_mode}, 0)
    - set_gain(${lna}, "LNA_ATTEN_STEP", 0)
    - set_gain(${grdb}, "IF_ATTEN_DB", 0)
    - set_antenna(${ant}, 0)
    - set_bandwidth(${bw}, 0)

file_format: 1
